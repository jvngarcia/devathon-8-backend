{
    "openapi": "3.0.0",
    "info": {
        "title": "Devathon 8: Team 1",
        "version": "0.1"
    },
    "servers": [
        {
            "url": "http://localhost:8000/api/",
            "description": "Localhost"
        }
    ],
    "paths": {
        "/v1/addresses": {
            "post": {
                "tags": [
                    "Addresses"
                ],
                "summary": "Create a new address",
                "description": "Store a newly created resource in storage.\n\nThis method validates the incoming request data, checks if the address already exists, and creates a new address record if it does not.",
                "operationId": "3fe8a40edfe1a3a4974c5ad8027bd176",
                "parameters": [
                    {
                        "name": "X-API-Key",
                        "in": "header",
                        "description": "API Key",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Address data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "place",
                                    "coordinates"
                                ],
                                "properties": {
                                    "place": {
                                        "type": "string",
                                        "example": "My house"
                                    },
                                    "city": {
                                        "type": "string",
                                        "example": "My city"
                                    },
                                    "country": {
                                        "type": "string",
                                        "example": "My country"
                                    },
                                    "coordinates": {
                                        "properties": {
                                            "longitude": {
                                                "type": "number",
                                                "format": "float",
                                                "example": "0.0"
                                            },
                                            "latitude": {
                                                "type": "number",
                                                "format": "float",
                                                "example": "0.0"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object",
                                "nullable": [
                                    "city",
                                    "country"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Address created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Address created successfully"
                                        },
                                        "address": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/addresses/recent": {
            "get": {
                "tags": [
                    "Addresses"
                ],
                "summary": "Get the last 5 addresses",
                "description": "Get the last 5 addresses",
                "operationId": "94f2b546f6040970157da322ee5cc359",
                "parameters": [
                    {
                        "name": "X-API-Key",
                        "in": "header",
                        "description": "API Key",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/v1/labor-registration": {
            "post": {
                "tags": [
                    "Labor-Registration"
                ],
                "summary": "Create a new labor registration",
                "description": "create a new labor registration",
                "operationId": "d07d66641572397cf8285061fd5e114b",
                "parameters": [
                    {
                        "name": "X-API-Key",
                        "in": "header",
                        "description": "API Key",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "image",
                                    "name",
                                    "email",
                                    "age",
                                    "address",
                                    "height"
                                ],
                                "properties": {
                                    "image": {
                                        "description": "Image file",
                                        "type": "string",
                                        "format": "binary",
                                        "example": "image.jpg"
                                    },
                                    "name": {
                                        "description": "Name of the labor",
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "description": "Email of the labor",
                                        "type": "string",
                                        "example": "exampleexample.com"
                                    },
                                    "age": {
                                        "description": "Age of the labor",
                                        "type": "integer",
                                        "example": "25"
                                    },
                                    "address": {
                                        "description": "Address of the labor",
                                        "type": "string",
                                        "example": "1234 Main St"
                                    },
                                    "height": {
                                        "description": "Height of the labor",
                                        "type": "number",
                                        "example": "1.75"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Labor registration created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Labor registration created successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "image": {
                                                    "description": "Image of the labor",
                                                    "type": "string",
                                                    "example": "http://localhost:8000/storage/image/image.jpg"
                                                },
                                                "name": {
                                                    "description": "Name of the labor",
                                                    "type": "string",
                                                    "example": "John Doe"
                                                },
                                                "email": {
                                                    "description": "Email of the labor",
                                                    "type": "string",
                                                    "example": "exampleexample.com"
                                                },
                                                "age": {
                                                    "description": "Age of the labor",
                                                    "type": "integer",
                                                    "example": "25"
                                                },
                                                "address": {
                                                    "description": "Address of the labor",
                                                    "type": "string",
                                                    "example": "1234 Main St"
                                                },
                                                "height": {
                                                    "description": "Height of the labor",
                                                    "type": "number",
                                                    "example": "1.75"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Invalid data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "properties": {
                                                "height": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The height must be a number."
                                                    }
                                                },
                                                "image": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The image must be an image."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/labor-registration/list": {
            "get": {
                "tags": [
                    "Labor-Registration"
                ],
                "summary": "Get a paginated list of labor registrations (elves)",
                "description": "Retrieves a paginated list of labor registrations (elves).",
                "operationId": "d372ce0e449e6f6091e07e90f13051bd",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "image": {
                                                        "type": "string",
                                                        "example": "http://localhost:8000/storage/image/image.jpg"
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "John Doe"
                                                    },
                                                    "email": {
                                                        "type": "string",
                                                        "example": "example@example.com"
                                                    },
                                                    "age": {
                                                        "type": "integer",
                                                        "example": 25
                                                    },
                                                    "address": {
                                                        "type": "string",
                                                        "example": "1234 Main St"
                                                    },
                                                    "height": {
                                                        "type": "number",
                                                        "example": 1.75
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "example": "2023-05-01 12:00:00"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "example": "2023-05-01 12:00:00"
                                                    },
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "current_page": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "total": {
                                            "type": "integer",
                                            "example": 50
                                        },
                                        "per_page": {
                                            "type": "integer",
                                            "example": 20
                                        },
                                        "last_page": {
                                            "type": "integer",
                                            "example": 3
                                        },
                                        "next_page_url": {
                                            "type": "string",
                                            "example": "http://localhost:8000/api/v1/labor-registration/list?page=2"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No elves found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "There's no elves hired"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Internal Server Error"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Exception message here"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/letters": {
            "get": {
                "tags": [
                    "Letters"
                ],
                "summary": "List and obtain letters ",
                "description": "Display a listing of the letters.",
                "operationId": "281a73133f54be66e45c6917717c6a61",
                "parameters": [
                    {
                        "name": "X-API-Key",
                        "in": "header",
                        "description": "API Key",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Filter by read status",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "read",
                                "unread"
                            ]
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search by sender, subject, content, or created_at",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Latest 5 letters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "type": {
                                                        "type": "string",
                                                        "example": "letters"
                                                    },
                                                    "id": {
                                                        "type": "string",
                                                        "example": "1"
                                                    },
                                                    "attributes": {
                                                        "properties": {
                                                            "sender": {
                                                                "type": "string",
                                                                "example": "John Doe"
                                                            },
                                                            "subject": {
                                                                "type": "string",
                                                                "example": "Hello"
                                                            },
                                                            "content": {
                                                                "type": "string",
                                                                "example": "Hello, how are you?"
                                                            },
                                                            "read": {
                                                                "type": "boolean",
                                                                "example": "false"
                                                            },
                                                            "image": {
                                                                "type": "string",
                                                                "example": "https://example.com/image.jpg"
                                                            },
                                                            "created_at": {
                                                                "type": "string",
                                                                "example": "2021-10-10T10:00:00.000000Z"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "links": {
                                            "properties": {
                                                "self": {
                                                    "type": "string",
                                                    "example": "link-value"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "meta": {
                                            "properties": {
                                                "total": {
                                                    "type": "integer",
                                                    "example": "1"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Letters not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "status": {
                                                        "type": "integer",
                                                        "example": "404"
                                                    },
                                                    "title": {
                                                        "type": "string",
                                                        "example": "Not Found"
                                                    },
                                                    "detail": {
                                                        "type": "string",
                                                        "example": "Letters not found."
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/letters/{id}": {
            "put": {
                "tags": [
                    "Letters"
                ],
                "summary": "Update the read status of a letter",
                "description": "Toggles the 'read' field (true/false) of a letter by its ID.",
                "operationId": "updateLetterReadStatus",
                "parameters": [
                    {
                        "name": "X-API-Key",
                        "in": "header",
                        "description": "API Key",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the letter",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Status updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Letter status updated successfully."
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "sender": {
                                                    "type": "string",
                                                    "example": "John Doe"
                                                },
                                                "subject": {
                                                    "type": "string",
                                                    "example": "Hello"
                                                },
                                                "content": {
                                                    "type": "string",
                                                    "example": "Hello, how are you?"
                                                },
                                                "read": {
                                                    "type": "boolean",
                                                    "example": "false"
                                                },
                                                "image_url": {
                                                    "type": "string",
                                                    "example": "https://example.com/image.jpg"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "example": "2021-10-10T10:00:00.000000Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "example": "2021-10-10T10:00:00.000000Z"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Letter not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Letter not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "406": {
                        "description": "Invalid ID",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid Letter ID."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/status": {
            "get": {
                "summary": "Status API",
                "description": "Status API",
                "operationId": "00addfdbb6b7ac9684a6417eab82f1dc",
                "parameters": [
                    {
                        "name": "X-API-Key",
                        "in": "header",
                        "description": "API Key",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        }
    },
    "tags": [
        {
            "name": "Addresses",
            "description": "Addresses"
        },
        {
            "name": "Labor-Registration",
            "description": "Labor-Registration"
        },
        {
            "name": "Letters",
            "description": "Letters"
        }
    ]
}